@using BlazorApp.Client.Components
@inherits LayoutComponentBase

@inject NavigationManager Navigation;

<!-- ======= Header ======= -->
<header id="header" class="fixed-top d-flex justify-content-center align-items-center @headerTransparentCss">
    <nav id="navbar" class="navbar @NavMenuCssClass">
        <ul @onclick="CloseNavMenu">
            <li>
                <!-- make home a standard a otherwise will match all page refreshes-->
                @* <a href="/" Match="NavLinkMatch.All" @onclick="@(() => CloseNavMenu("home"))" class="@homeLinkCSS">Home</a> *@
                <NavLink href="/" Match="NavLinkMatch.All">Home</NavLink> 
            </li>
            <li>
                @* <a href="#why-yoga" Match="NavLinkMatch.All" @onclick="@(() => CloseNavMenu("about"))" class="@aboutLinkCSS">About</a> *@
                <NavLink href="/#whatismindfulness" Match="NavLinkMatch.All" class="">What is mindfulness?</NavLink>
            </li>
            <li>
                @* <a href="/#classes" Match="NavLinkMatch.All" @onclick="@(() => CloseNavMenu("classes"))" class="@classesLinkCSS">Classes</a> *@
                <NavLink href="/#aboutjean" Match="NavLinkMatch.All">About Jean</NavLink>
            </li>
            <li class="dropdown">
                <NavLink href="/mbsr" Match="NavLinkMatch.All">The MBSR</NavLink>              
                <ul>
                    <li><NavLink href="/mbsr" Match="NavLinkMatch.All">Overview</NavLink></li>
                    <li><NavLink href="/mbsr/orientation" Match="NavLinkMatch.All">Orientation</NavLink></li>
                    <li><NavLink href="/mbsr/weeks1and2" Match="NavLinkMatch.All">Weeks 1 and 2</NavLink></li>
                    <li><NavLink href="/mbsr/weeks3and4" Match="NavLinkMatch.All">Weeks 3 and 4</NavLink></li>
                    <li><NavLink href="/mbsr/weeks5and6" Match="NavLinkMatch.All">Weeks 5 and 6</NavLink></li>
                    <li><NavLink href="/mbsr/retreat" Match="NavLinkMatch.All">Retreat</NavLink></li>
                    <li><NavLink href="/mbsr/weeks7and8" Match="NavLinkMatch.All">Weeks 7 and 8</NavLink></li>
                </ul>
            </li>
        </ul>
        <i class="bi bi-list mobile-nav-toggle @mobileMenuTogglerCssClass" @onclick="ToggleNavMenu"></i>
    </nav><!-- .navbar -->
    
 
</header><!-- End Header -->

<AnchorNavigation />


 @Body

<!-- ======= Footer ======= -->
<footer id="footer">
    <div class="container">
        <h3>mybreathingspace.net</h3>
        <p>Become gently aware of this, the present moment...</p>
        <div class="social-links">
            @* <a href="#" class="twitter"><i class="bx bxl-twitter"></i></a>*@
            <a href="https://www.youtube.com/channel/UCrf3ituIgubPh6VjMYGSzUQ" target="_blank" class=""><i class="bi bi-facebook" ></i></a>
            @* <a href="#" class="instagram"><i class="bx bxl-instagram"></i></a>
            <a href="#" class="google-plus"><i class="bx bxl-skype"></i></a>
            <a href="#" class="linkedin"><i class="bx bxl-linkedin"></i></a>*@
        </div>
        <div class="copyright">
            &copy; Copyright <strong><span>mybreathingspace.net</span></strong>. All Rights Reserved
        </div>
        <div class="credits">
        </div>
    </div>
</footer><!-- End Footer -->

@code {

    private bool landingPage = true;
    private string? headerTransparentCss => landingPage ? "header-transparent" : null;

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? null : "navbar-mobile";

    private string? NavMenuDropdownCssClass => collapseNavMenu ? null : "dropdown-active";
    private string? mobileMenuTogglerCssClass => collapseNavMenu ? null : "bi-x";

    private string @CloseMenuCssClass => collapseNavMenu ? "d-none" : "d-flex";

    private int counter;

    protected override async Task OnInitializedAsync()
    {
        Navigation.LocationChanged -= OnLocationChanged;
        Navigation.LocationChanged += OnLocationChanged;
    }

    private async void OnLocationChanged(object sender, LocationChangedEventArgs e)
    {
      
        landingPage = e.Location.Contains("home") || (Navigation.Uri == Navigation.BaseUri);

    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void CloseNavMenu()
    {
        if (collapseNavMenu == false)
            collapseNavMenu = true;
    }

   
    private void OnScroll()
    {
        counter++;
    }
  
}